# Ring the bell if any background window rang a bell
set -g bell-action any

# force tmux to use utf-8
setw -gq utf8 on
set -gq status-utf8 on

# Make sure we have true colors
set -g default-terminal 'tmux-256color'
set-option -sa terminal-overrides ',xterm-256color:Tc:RGB'
  {{- range .tmux_terminal_features -}}
    {{- if hasKey . "overrides" }}
set-option -sa terminal-overrides ',{{ .term_name }}:{{ .overrides }}'
    {{- end }}
  {{- end }}

  {{/* Only tmux >= 3.1 supports terminal-features */}}
  {{- if lookPath "tmux" }}
    {{- if (output "tmux" "-V" | regexMatch " 3.[1-4].*") }}
      {{- range .tmux_terminal_features -}}
        {{- if hasKey . "features" }}
set-option -sa terminal-features ',{{ .term_name }}:{{ .features }}'
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key ^V split-window -h -c '#{pane_current_path}'
bind-key ^S split-window -v -c '#{pane_current_path}'

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Break out the current pane to a window
bind b break-pane -d

{{ template "tmux-navigator.conf" }}


# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

set-window-option -g mouse on

# enable this to improve autoread on neovim
set-option -g focus-events on


# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# Fix VISUAL shortcuts for TMUX
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
bind-key -T copy-mode-vi Escape send-keys -X clear-selection
bind-key -T copy-mode-vi i send-keys -X cancel
unbind-key -T copy-mode-vi p     ;   bind-key -T copy-mode-vi p   send-keys -X paste-buffer
unbind-key -T copy-mode-vi Space ;   bind-key -T copy-mode-vi v   send-keys -X begin-selection
unbind-key -T copy-mode-vi V     ;   bind-key -T copy-mode-vi V   send-keys -X start-of-line        \; send-keys -X begin-selection \; send-keys -X end-of-line
unbind-key -T copy-mode-vi Enter ;   bind-key -T copy-mode-vi y   send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Y     ;   bind-key -T copy-mode-vi Y   send-keys -X start-of-line        \; send-keys -X begin-selection \; send-keys -X end-of-line \; send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
unbind-key -T copy-mode-vi C-v   ;   bind-key -T copy-mode-vi C-v send-keys -X begin-selection      \; send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [     ;   bind-key -T copy-mode-vi [   send-keys -X begin-selection
unbind-key -T copy-mode-vi ]     ;   bind-key -T copy-mode-vi ]   send-keys -X copy-selection


# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter


{{ if eq .chezmoi.os "darwin" -}}

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

{{- else if lookPath "xclip" -}}

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

{{- end }}


# No escape time for vi mode
set -sg escape-time 0

unbind l
bind C-b last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c '#{pane_current_path}'

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded!'


# Status styles
set-option -g status 'on'
set-option -g status-interval 2
set-option -g status-style none,align=left
set-option -g status-left-style none
set-option -g status-left-length '80'
set-option -g status-right-style none
set-option -g status-right-length '80'
set-window-option -g window-status-activity-style none
set-window-option -g window-status-separator ''

{{
  include (
    printf
      ".chezmoitemplates/colors/tmux.%s.conf"
      (index .color .param.color "tmux")
  )
}}

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
